{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Plumsail SP",
    "description": "This connector provides a set of SharePoint related actions. For example, permissions, documents, folders, document sets management. Visit official site for more information https://plumsail.com/actions/",
    "contact": {
      "name": "Support",
      "url": "https://plumsail.com",
      "email": "support@plumsail.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "api.plumsail.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/flow/v1/SharePointFlow/Schema/ChangePermissions": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaChangePermissionsPost",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "actionType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Grant",
              "Remove",
              "RemoveAll",
              "RestoreInheritance"
            ],
            "x-ms-summary": "Action type",
            "description": "The type of the operation"
          },
          {
            "name": "target",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "List",
              "Item",
              "Folder",
              "Document"
            ],
            "x-ms-summary": "Target",
            "description": "The target of the operation"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "ChangePermissionsSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/CreateModernSite": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaCreateModernSitePost",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "siteType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "TeamSite",
              "CommunicationSite"
            ],
            "x-ms-summary": "Site Type",
            "description": "The type of the site for create"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "CreateModernSiteSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/GetItemsByCAMLQuery": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaGetItemsByCAMLQueryPost",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "camlQuery",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "CAML Query",
            "description": "CAML query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "GetItemsByCAMLQueryResponseSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/InviteExternalUser": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaInviteExternalUserPost",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "target",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "Item",
              "Group"
            ],
            "x-ms-summary": "Target",
            "description": "The target of the operation"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "InviteExternalUserSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateSiteFromTemplate": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateSiteFromTemplatePost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSiteFromTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebUrlResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Site from Template",
        "description": "Create a new SharePoint site based on specific template"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ChangePermissions": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsChangePermissionsPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "actionType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Grant",
              "Remove",
              "RemoveAll",
              "RestoreInheritance"
            ],
            "x-ms-summary": "Action type",
            "description": "The type of the operation"
          },
          {
            "name": "target",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "List",
              "Item",
              "Folder",
              "Document"
            ],
            "x-ms-summary": "Target",
            "description": "The target of the operation"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaChangePermissionsPost",
                "value-path": "items",
                "parameters": {
                  "actionType": {
                    "parameter": "actionType"
                  },
                  "target": {
                    "parameter": "target"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Change SharePoint permissions",
        "description": "Grant, remove and restore permissions for the site, the list, and the item"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ActivateFeature": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsActivateFeaturePost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivateFeatureRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Activate SharePoint Feature",
        "description": "Activate a feature with specific ID"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateListOrLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateListOrLibraryPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateListOrLibraryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint List or Library",
        "description": "Create list or library by template"
      }
    },
    "/flow/v1/SharePointFlow/jobs/SetDefaultSiteGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsSetDefaultSiteGroupPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDefaultSiteGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Set Default SharePoint Site Group",
        "description": "Configure default groups for the site it is analog of the permsetup.aspx page"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyDocumentFromLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyDocumentFromLibraryPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Document from Library",
        "description": "Copies the document from the document library to the specified URL. You can copy the document to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveDocumentFromLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveDocumentFromLibraryPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Document from Library",
        "description": "Moves the document from the document library to the specified URL. You can copy the document to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveDocumentByUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveDocumentByUrlPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Document by URL",
        "description": "Remove the document by a specific URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateDocumentSet": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateDocumentSetPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDocumentSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Document Set",
        "description": "Creates a new document set in the document library by the specified URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyDocumentSet": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyDocumentSetPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDocumentSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Document Set",
        "description": "Copies the document set from the document library to the specified URL. You can copy the document sets to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveDocumentSet": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveDocumentSetPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDocumentSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Document Set",
        "description": "Moves the document set from the document library to the specified URL. You can copy the document sets to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateFolderByUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateFolderByUrlPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFolderByUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Folder by URL",
        "description": "Creates a new folder in the document library by the specified URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateFolderInList": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateFolderInListPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFolderInListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Folder in List",
        "description": "Creates a new folder in the document library or list using the specified path"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveFolderByUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveFolderByUrlPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveFolderByUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Folder by URL",
        "description": "Removes the folder from the document library or list by the specified URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyFolderFromLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyFolderFromLibraryPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Folder from Library",
        "description": "Copies the folder from the document library to the specified URL. You can copy the folder to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveFolderFromLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveFolderFromLibraryPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Folder from Library",
        "description": "Moves the folder from the document library to the specified URL. You can move the folder to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CheckInDocument": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCheckInDocumentPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckInDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Check In SharePoint Document",
        "description": "Check-in the document at the specified URL with the specified comment"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CheckOutDocument": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCheckOutDocumentPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckOutDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Check Out SharePoint Document",
        "description": "Check-out the document at the specified URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateModernSite": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateModernSitePost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "TeamSite",
              "CommunicationSite"
            ],
            "x-ms-summary": "Site Type",
            "description": "The type of the site for create"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaCreateModernSitePost",
                "value-path": "items",
                "parameters": {
                  "siteType": {
                    "parameter": "siteType"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebUrlResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create Modern SharePoint Site",
        "description": "Creates a modern SharePoint Team or Communication site"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateSharePointGroupPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSPGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Group",
        "description": "Creates the SharePoint group with a specified name"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveSharePointGroupPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveSPGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Group",
        "description": "Removes the SharePoint group by a specified name"
      }
    },
    "/flow/v1/SharePointFlow/jobs/UpdateSharePointGroupProperties": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsUpdateSharePointGroupPropertiesPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSPGroupPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Update SharePoint Group Properties",
        "description": "Updates SharePoint group properties like AutoAcceptRequestToJoinLeave, AllowMembersEditMembership or other options described in MSDN"
      }
    },
    "/flow/v1/SharePointFlow/jobs/AddUserToSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsAddUserToSharePointGroupPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUserToSPGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Add User to SharePoint Group",
        "description": "Adds a user to a specific SharePoint group"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveUserFromSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveUserFromSharePointGroupPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveUserFromSPGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove User from SharePoint Group",
        "description": "Removes a user from a specific SharePoint group"
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetSharePointGroupMembers": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsGetSharePointGroupMembersPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUsersFromGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSPGroupMembersResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get Members of SharePoint Group",
        "description": "Gets members of a specific SharePoint group"
      }
    },
    "/flow/v1/SharePointFlow/jobs/UserExistInSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsUserExistInSharePointGroupPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserExistsInGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserExistsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Is User Member of SharePoint Group",
        "description": "Checks if a user is a member of a specifed SharePoint group"
      }
    },
    "/flow/v1/SharePointFlow/jobs/UpdateSharePointSiteProperties": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsUpdateSharePointSitePropertiesPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSitePropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Update SharePoint Site Properties",
        "description": "Updates web properties like Title, Description or other string options described in at MSDN"
      }
    },
    "/flow/v1/SharePointFlow/jobs/DeleteSharePointSite": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsDeleteSharePointSitePost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseSPRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Delete SharePoint Site",
        "description": "Deletes the SharePoint site by a specific URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetSharePointSiteOptionValueAsString": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsGetSharePointSiteOptionValueAsStringPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSiteOptionValueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SPSiteOptionValueResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Site Option Value",
        "description": "Reads a value from SharePoint Site Options (Property Bag)"
      }
    },
    "/flow/v1/SharePointFlow/jobs/InviteExternalUserToSharePoint": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsInviteExternalUserToSharePointPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "target",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "Item",
              "Group"
            ],
            "x-ms-summary": "Target",
            "description": "The target of the operation"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaInviteExternalUserPost",
                "value-path": "items",
                "parameters": {
                  "target": {
                    "parameter": "target"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Invite External User to SharePoint",
        "description": "Invites external users with specific permission to an SharePoint site, an specific SharePoint group or an item in a SharePoint list"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyAttachmentsToUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyAttachmentsToUrlPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyAttachmentsToUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFileUrlsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Item Attachments to URL",
        "description": "Copies attachments from the SharePoint list item to the library using the specified folder URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveAttachmentsToUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveAttachmentsToUrlPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveAttachmentsToUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFileUrlsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Item Attachments to URL",
        "description": "Moves attachments from the SharePoint list item to the library using the specified folder URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/AddContentTypeToSharePointList": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsAddContentTypeToSharePointListPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddContentTypeToListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Add Content Type to SharePoint List",
        "description": "Adds the specified content type to a SharePoint list"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyListItemToSharePointList": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyListItemToSharePointListPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyListItemToListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListItemIdResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy List Item to SharePoint List",
        "description": "Copies the specified list item to another SharePoint list"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveListItemToSharePointList": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveListItemToSharePointListPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveListItemToListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListItemIdResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move List Item to SharePoint List",
        "description": "Moves the specified list item to another SharePoint list"
      }
    },
    "/flow/v1/SharePointFlow/jobs/StartListWorkflow": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsStartListWorkflowPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartListWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkflowGuidResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Start SharePoint List Workflow (2013)",
        "description": "Starts a SharePoint list level workflow and pass input parameters, if they were specified. The action can run only 2013 workflows"
      }
    },
    "/flow/v1/SharePointFlow/jobs/StartSiteWorkflow": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsStartSiteWorkflowPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartSiteWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkflowGuidResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Start SharePoint Site Workflow (2013)",
        "description": "Starts a SharePoint site level workflow and pass input parameters, if they were specified. The action can run only 2013 workflows"
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetItemsByCamlQuery": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsGetItemsByCamlQueryPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetItemsByCAMLQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetItemsByCAMLQuerySchemaResponseClass"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Items By CAML Query",
        "description": "Executes a CAML query on a list or on a document library and returns the collection of elements"
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetVersionsHistory": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsGetVersionsHistoryPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetListItemVersionsHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VersionsHistoryResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Item Versions History",
        "description": "Returns the changes history for the specific field from the SharePoint list item"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ProvisionPnPTemplate": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsProvisionPnPTemplatePost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisionPnPTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Provision PnP Template to SharePoint",
        "description": "Applies a PnP template to a SharePoint site"
      }
    }
  },
  "definitions": {
    "CreateSiteFromTemplateRequest": {
      "required": [
        "title",
        "template",
        "leafUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-summary": "Title",
          "description": "Title of new site"
        },
        "template": {
          "type": "string",
          "x-ms-summary": "Template",
          "description": "Title of the site template that will be used for the new site"
        },
        "leafUrl": {
          "type": "string",
          "x-ms-summary": "Leaf URL",
          "description": "A string that represents the URL leaf name"
        },
        "description": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Description",
          "description": "Description of the web"
        },
        "lcid": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Lcid",
          "description": "LCID of the new web"
        },
        "inheritPermissions": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Inherit Permissions",
          "description": "Specifies whether the new site will inherit permissions from its parent site"
        },
        "inheritNavigation": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Inherit Navigation",
          "description": "Specifies whether the site inherits navigation"
        },
        "onTopNav": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "On Top Navigation",
          "description": "Display this site on the top link bar of the parent site. Default value is Yes"
        },
        "onQuickLaunch": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "On Quick Launch",
          "description": "Display this site on the Quick Launch of the parent site. Default value is No"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "WebUrlResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "x-ms-summary": "Web URL"
        }
      }
    },
    "ActivateFeatureRequest": {
      "required": [
        "featureId",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature ID",
          "description": "Guid of the feature"
        },
        "force": {
          "type": "boolean",
          "x-ms-summary": "Force",
          "description": "true to force activation of the Feature even if there are errors; otherwise, false"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CreateListOrLibraryRequest": {
      "required": [
        "title",
        "template",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-summary": "Title",
          "description": "Title of the list"
        },
        "template": {
          "type": "string",
          "x-ms-summary": "Template",
          "description": "Title of the template that will be used for this list"
        },
        "partialUrl": {
          "type": "string",
          "x-ms-summary": "Partial URL",
          "description": "Partial url of the list"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Description of the list"
        },
        "onQuickLaunch": {
          "type": "boolean",
          "x-ms-summary": "On Quick Launch",
          "description": "Display this list on the Quick Launch"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "SetDefaultSiteGroupRequest": {
      "required": [
        "groupType",
        "groupName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "groupType": {
          "enum": [
            "Owner",
            "Member",
            "Visitor"
          ],
          "type": "string",
          "x-ms-summary": "Group Type",
          "description": "Type of the group"
        },
        "groupName": {
          "type": "string",
          "x-ms-summary": "Group Name",
          "description": "Name of the group"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CopyDocumentRequest": {
      "required": [
        "sourceUrl",
        "destinationUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the document to be copied. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source document will be copied. You can use full URL as well as domain relative URL"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "DocumentInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Document ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Document URL"
        }
      }
    },
    "MoveDocumentRequest": {
      "required": [
        "sourceUrl",
        "destinationUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the document to be moved. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source document will be moved. You can use full URL as well as domain relative URL"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "RemoveDocumentRequest": {
      "required": [
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "x-ms-summary": "Document URL",
          "description": "The URL of the document to be removed. You can use full URL as well as domain relative URL"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CreateDocumentSetRequest": {
      "required": [
        "documentSetName",
        "targetListUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "documentSetName": {
          "type": "string",
          "x-ms-summary": "DocumentSet Name",
          "description": "The name of the document set"
        },
        "targetListUrl": {
          "type": "string",
          "x-ms-summary": "Target List",
          "description": "The name or the URL of a library or a list where the document set will be created. You can use full URL as well as domain relative URL"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "DocumentSetInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Document set ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Document set URL"
        }
      }
    },
    "CopyDocumentSetRequest": {
      "required": [
        "sourceUrl",
        "destinationUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the document set to be copied. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source document set will be copied. You can use full URL as well as domain relative URL. If the URL ends with slash '/' the document sets will be placed in this folder without name changes. Otherwise the document set will be renamed"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "MoveDocumentSetRequest": {
      "required": [
        "sourceUrl",
        "destinationUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the document set to be moved. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source document set will be moved. You can use full URL as well as domain relative URL. If the URL ends with slash '/' the document sets will be placed in this folder without name changes. Otherwise the Document set will be renamed"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CreateFolderByUrlRequest": {
      "required": [
        "folderUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "folderUrl": {
          "type": "string",
          "x-ms-summary": "Folder URL",
          "description": "The URL of the folder. If you specify full path, you can create several folders"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "FolderInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Folder ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Folder URL"
        }
      }
    },
    "CreateFolderInListRequest": {
      "required": [
        "targetListUrl",
        "folderPath",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "targetListUrl": {
          "type": "string",
          "x-ms-summary": "Target List",
          "description": "The name or the URL of a library or a list where the folder will be created. You can use full URL as well as domain relative URL"
        },
        "folderPath": {
          "type": "string",
          "x-ms-summary": "Folder Path",
          "description": "The path where the folder will be created. The action will create all folders included into the path"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "RemoveFolderByUrlRequest": {
      "required": [
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "x-ms-summary": "Folder URL",
          "description": "The URL of the library where the source folder will be removed. You can use full URL as well as domain relative URL"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CopyFolderRequest": {
      "required": [
        "sourceUrl",
        "destinationUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the folder to be copied. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source folder will be copied. You can use full URL as well as domain relative URL"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "MoveFolderRequest": {
      "required": [
        "sourceUrl",
        "destinationUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the folder to be moved. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source folder will be moved. You can use full URL as well as domain relative URL"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CheckInDocumentRequest": {
      "required": [
        "documentUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "x-ms-summary": "Comment",
          "description": "The comment to accompany document check in"
        },
        "documentUrl": {
          "type": "string",
          "x-ms-summary": "Document URL",
          "description": "The URL of the document to check in"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CheckOutDocumentRequest": {
      "required": [
        "documentUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "documentUrl": {
          "type": "string",
          "x-ms-summary": "Document URL",
          "description": "The URL of the document to check in"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CreateSPGroupRequest": {
      "required": [
        "groupName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "groupDescription": {
          "type": "string",
          "x-ms-summary": "Group Description",
          "description": "The description of the group"
        },
        "userLogin": {
          "type": "string",
          "x-ms-summary": "Group Owner",
          "description": "The owner of the group, can be email or the user login"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "RemoveSPGroupRequest": {
      "required": [
        "groupName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "UpdateSPGroupPropertiesRequest": {
      "required": [
        "groupName",
        "properties",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "properties": {
          "$ref": "#/definitions/SPGroupProperties"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "SPGroupProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "The title for the group"
        },
        "description": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Description",
          "description": "The description for the group"
        },
        "owner": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Owner",
          "description": "The owner for the group, which can be a user or another group"
        },
        "allowMembersEditMembership": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Allow Members Edit Membership",
          "description": "A value that specifies whether group members can modify membership in the group"
        },
        "allowRequestToJoinLeave": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Allow Request to Join Leave",
          "description": "A value that specifies whether to allow users to request membership in the group and to allow users to request to leave the group"
        },
        "autoAcceptRequestToJoinLeave": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Auto Accept Request to Join Leave",
          "description": "A value that specifies whether users are automatically added or removed when they make a request"
        },
        "onlyAllowMembersViewMembership": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Only Allow Members View Membership",
          "description": "A value that specifies whether only group members are allowed to view the list of members in the group"
        },
        "requestToJoinLeaveEmailSetting": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Request to Join Leave Email Setting",
          "description": "The e-mail address to which membership requests are sent"
        }
      }
    },
    "AddUserToSPGroupRequest": {
      "required": [
        "groupName",
        "userLogin",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "userLogin": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "User",
          "description": "Login or email of the user which will be added to the specific group. Also you can specify multiple items using semicolon ';' delimited"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "RemoveUserFromSPGroupRequest": {
      "required": [
        "groupName",
        "userLogin",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "userLogin": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "User",
          "description": "Login or email of the user which will be removed from the specific group. Also you can specify multiple items using semicolon ';' delimited"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "GetUsersFromGroupRequest": {
      "required": [
        "groupName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "GetSPGroupMembersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharePointUserResponse"
          },
          "x-ms-summary": "Users"
        }
      }
    },
    "SharePointUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "User ID"
        },
        "loginName": {
          "type": "string",
          "x-ms-summary": "User Name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "User Email"
        },
        "claims": {
          "type": "string",
          "x-ms-summary": "User Claims"
        }
      }
    },
    "UserExistsInGroupRequest": {
      "required": [
        "groupName",
        "userLogin",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "userLogin": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "User",
          "description": "Login or email of a user for checking if he is a member in the specified group"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "UserExistsResponse": {
      "type": "object",
      "properties": {
        "userExists": {
          "type": "boolean",
          "x-ms-summary": "User Exists"
        }
      }
    },
    "UpdateSitePropertiesRequest": {
      "required": [
        "properties",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SPWebProperties"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "SPWebProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "The title for the website"
        },
        "description": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Description",
          "description": "The description for the site"
        },
        "quickLaunchEnabled": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Quick Launch Enabled",
          "description": "A value that specifies whether the Quick Launch area is enabled on the website"
        },
        "treeViewEnabled": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Tree View Enabled",
          "description": "A value that specifies whether the SharePoint Foundation TreeView is enabled in the left navigational area of website pages"
        },
        "siteLogoUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Site Logo URL",
          "description": "The absolute URL of the website logo"
        },
        "alternateCssUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Alternate Css URL",
          "description": "The URL for an alternate cascading style sheet (CSS) to use in the website"
        },
        "associatedMemberGroup": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Associated Member Group",
          "description": "The users who have been given contribute permissions to the website"
        },
        "associatedOwnerGroup": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Associated Owner Group",
          "description": "The associated owner groups of the website"
        },
        "associatedVisitorGroup": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Associated Visitor Group",
          "description": "The associated visitor group of the website"
        },
        "containsConfidentialInfo": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Contains Confidential Info",
          "description": "A value that specifies whether the SharePoint site contain a confidential information"
        },
        "customMasterUrl": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Custom Master URL",
          "description": "The URL for a custom master page file to apply to the website"
        },
        "enableMinimalDownload": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Enable Minimal Download",
          "description": "A value that specifies whether the Web site should use Minimal Download Strategy"
        },
        "isMultilingual": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Is Multilingual",
          "description": "A value that indicates whether a multilingual user interface is enabled for the website"
        },
        "masterUrl": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Master URL",
          "description": "The URL of the master page that is used for the website"
        },
        "membersCanShare": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Members Can Share",
          "description": "Allow Members to share the site and invite others"
        },
        "noCrawl": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "No Crawl",
          "description": "A value that specifies whether searching is enabled for the website"
        },
        "overwriteTranslationsOnChange": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Overwrite Translations on Change",
          "description": "A value that indicates whether changes made to user-specified text in the default language should automatically overwrite existing translations made in all alternate languages"
        },
        "requestAccessEmail": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Request Access Email",
          "description": "The e-mail address to which requests for access are sent"
        },
        "saveSiteAsTemplateEnabled": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Save Site as Template Enabled",
          "description": "A value that specifies whether the Web site can be saved as a site template"
        },
        "serverRelativeUrl": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Server Relative URL",
          "description": "The server-relative URL for the website"
        },
        "syndicationEnabled": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Syndication Enabled",
          "description": "A value that specifies whether Really Simple Syndication (RSS) is enabled in the website"
        },
        "uiVersion": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "UI Version",
          "description": "The current version number of the user interface"
        }
      }
    },
    "BaseSPRequest": {
      "required": [
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "GetSiteOptionValueRequest": {
      "required": [
        "optionName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "optionName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Option Name",
          "description": "Name of the option"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "SPSiteOptionValueResponse": {
      "type": "object",
      "properties": {
        "optionValue": {
          "type": "string",
          "x-ms-summary": "Option Value"
        }
      }
    },
    "CopyAttachmentsToUrlRequest": {
      "required": [
        "listUrl",
        "itemId",
        "destinationUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "listUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "The ID of the source item"
        },
        "destinationUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Destination Folder URL",
          "description": "The URL of the folder where the attachments will be copied"
        },
        "overwrite": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Overwrite",
          "description": "Overwrite if a file with the same name already exists"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "ListFileUrlsResponse": {
      "type": "object",
      "properties": {
        "fileUrls": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "File URLs"
        }
      }
    },
    "MoveAttachmentsToUrlRequest": {
      "required": [
        "listUrl",
        "itemId",
        "destinationUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "listUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "The ID of the source item"
        },
        "destinationUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Destination Folder URL",
          "description": "The URL of the folder where the attachments will be moved"
        },
        "overwrite": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Overwrite",
          "description": "Overwrite if a file with the same name already exists"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "AddContentTypeToListRequest": {
      "required": [
        "listUrl",
        "contentTypeName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "listUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "contentTypeName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Content Type Name",
          "description": "Name of the content type"
        },
        "makeItDefault": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Make It Default",
          "description": "Make the content type default for the list"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "CopyListItemToListRequest": {
      "required": [
        "listUrl",
        "itemId",
        "destinationListUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "listUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "The ID of the source item"
        },
        "destinationListUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Destination List URL",
          "description": "The URL of the destination list. This list must contain same fields like in the source list"
        },
        "copyAttachments": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Copy Attachments",
          "description": "Copy the item with attached files or not"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "ListItemIdResponse": {
      "type": "object",
      "properties": {
        "resultItemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Result Item ID"
        }
      }
    },
    "MoveListItemToListRequest": {
      "required": [
        "listUrl",
        "itemId",
        "destinationListUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "listUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "The ID of the source item"
        },
        "destinationListUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Destination List URL",
          "description": "The URL of the destination list. This list must contain same fields like in the source list"
        },
        "copyAttachments": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Move Attachments",
          "description": "Move the item with attached files or not"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "StartListWorkflowRequest": {
      "required": [
        "listUrl",
        "itemId",
        "workflowName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "listUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "Item ID of the item for which you want to start the list workflow"
        },
        "workflowName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Workflow Name",
          "description": "Name of the workflow which will be started"
        },
        "inputParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-ms-summary": "Input Parameters",
          "description": "JSON string that contains input parameters for workflow"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "WorkflowGuidResponse": {
      "type": "object",
      "properties": {
        "workflowGuid": {
          "type": "string",
          "x-ms-summary": "Workflow GUID"
        }
      }
    },
    "StartSiteWorkflowRequest": {
      "required": [
        "workflowName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "workflowName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Workflow Name",
          "description": "Name of the workflow which will be started"
        },
        "inputParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-ms-summary": "Input Parameters",
          "description": "JSON string that contains input parameters for workflow"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "GetItemsByCAMLQueryRequest": {
      "required": [
        "listUrl",
        "camlQuery",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "listUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "folderUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Folder URL",
          "description": "The server relative URL of a list folder from which results will be returned"
        },
        "camlQuery": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CAML Query",
          "description": "CAML query that will be run"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "GetItemsByCAMLQuerySchemaResponseClass": {
      "type": "object",
      "properties": {},
      "x-ms-dynamic-schema": {
        "operationId": "FlowV1SharePointFlowSchemaGetItemsByCAMLQueryPost",
        "value-path": "response",
        "parameters": {
          "camlQuery": {
            "parameter": "camlQuery"
          }
        }
      }
    },
    "GetListItemVersionsHistoryRequest": {
      "required": [
        "listUrl",
        "itemId",
        "fieldName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "listUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "Item ID of the item for which you want to get the version history"
        },
        "fieldName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Field Name",
          "description": "Name of the field for which you want to get the version history"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    },
    "VersionsHistoryResponse": {
      "type": "object",
      "properties": {
        "countVersions": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "x-ms-summary": "Count Versions"
        },
        "versions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharePointVersionResponse"
          },
          "x-ms-summary": "Versions"
        }
      }
    },
    "SharePointVersionResponse": {
      "type": "object",
      "properties": {
        "editor": {
          "$ref": "#/definitions/SharePointUserResponse"
        },
        "modified": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Modified"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      }
    },
    "ProvisionPnPTemplateRequest": {
      "required": [
        "xmlTemplateContent",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "xmlTemplateContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Xml Template Content",
          "description": "The content of an XML template"
        },
        "spUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "This property defines the context of the action. The action will be executed on specified SharePoint site"
        }
      }
    }
  },
  "responses": {
    "401": {
      "description": "Unauthorized"
    },
    "500": {
      "description": "Internal server error"
    }
  },
  "securityDefinitions": {
    "api_key": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "API key issued by account.plumsail.com"
    }
  }
}