{
  "swagger": "2.0",
  "info": {
    "title": "HubSpot CMS",
    "description": "",
    "version": "1.0",
    "contact": {
      "name": "Troy Taylor",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "api.hubapi.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/content/api/v2/pages": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "List pages (V2)",
        "description": "Get all of your pages. Supports paging and filtering.",
        "operationId": "PagesList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 20
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "enum": [
              false,
              true
            ]
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create a new page (V2)",
        "description": "Create a new page.",
        "operationId": "PagesCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "campaign": {
                  "title": "Campaign",
                  "type": "string",
                  "description": "campaign"
                },
                "campaign_name": {
                  "title": "Campaign name",
                  "type": "string",
                  "description": "campaign_name"
                },
                "footer_html": {
                  "title": "Footer HTML",
                  "type": "string",
                  "description": "footer_html"
                },
                "head_html": {
                  "title": "Head HTML",
                  "type": "string",
                  "description": "head_html"
                },
                "is_draft": {
                  "title": "Is draft",
                  "type": "string",
                  "description": "is_draft"
                },
                "meta_description": {
                  "title": "Meta description",
                  "type": "string",
                  "description": "meta_description"
                },
                "meta_keywords": {
                  "title": "Meta keywords",
                  "type": "string",
                  "description": "meta_keywords"
                },
                "name": {
                  "title": "Name",
                  "type": "string",
                  "description": "name"
                },
                "password": {
                  "title": "Password",
                  "type": "string",
                  "description": "password"
                },
                "publish_date": {
                  "title": "Publish date",
                  "type": "string",
                  "description": "publish_date"
                },
                "publish_immediately": {
                  "title": "Publish immediately",
                  "type": "string",
                  "description": "publish_immediately"
                },
                "slug": {
                  "title": "Slug",
                  "type": "string",
                  "description": "slug"
                },
                "subcategory": {
                  "title": "Subcategory",
                  "type": "string",
                  "description": "subcategory"
                },
                "widget_containers": {
                  "title": "Widget containers",
                  "type": "string",
                  "description": "widget_containers"
                },
                "widgets": {
                  "title": "Widgets",
                  "type": "string",
                  "description": "widgets"
                }
              }
            }
          }
        ]
      }
    },
    "/content/api/v2/pages/{page_id}": {
      "delete": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete a page (V2)",
        "description": "Marks a page as deleted. Returns 204 No Content letting you know that the page was successfully deleted. The page can be restored later via a POST to the restore-deleted endpoint.",
        "operationId": "PagesArchive",
        "parameters": [
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update a page (V2)",
        "description": "Updates a page in the database. If not all top level fields are included in the body, we will only update the included fields.",
        "operationId": "PagesUpdate",
        "parameters": [
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "campaign": {
                  "title": "Campaign",
                  "type": "string",
                  "description": "campaign"
                },
                "campaign_name": {
                  "title": "Campaign name",
                  "type": "string",
                  "description": "campaign_name"
                },
                "footer_html": {
                  "title": "Footer HTML",
                  "type": "string",
                  "description": "footer_html"
                },
                "head_html": {
                  "title": "Head HTML",
                  "type": "string",
                  "description": "head_html"
                },
                "is_draft": {
                  "title": "Is draft",
                  "type": "string",
                  "description": "is_draft"
                },
                "meta_description": {
                  "title": "Meta description",
                  "type": "string",
                  "description": "meta_description"
                },
                "meta_keywords": {
                  "title": "Meta keywords",
                  "type": "string",
                  "description": "meta_keywords"
                },
                "name": {
                  "title": "Name",
                  "type": "string",
                  "description": "name"
                },
                "password": {
                  "title": "Password",
                  "type": "string",
                  "description": "password"
                },
                "publish_date": {
                  "title": "Publish date",
                  "type": "string",
                  "description": "publish_date"
                },
                "publish_immediately": {
                  "title": "Publish immediately",
                  "type": "string",
                  "description": "publish_immediately"
                },
                "slug": {
                  "title": "Slug",
                  "type": "string",
                  "description": "slug"
                },
                "subcategory": {
                  "title": "Subcategory",
                  "type": "string",
                  "description": "subcategory"
                },
                "widget_containers": {
                  "title": "Widget containers",
                  "type": "string",
                  "description": "widget_containers"
                },
                "widgets": {
                  "title": "Widgets",
                  "type": "string",
                  "description": "widgets"
                }
              }
            }
          }
        ]
      }
    },
    "/content/api/v2/pages/{page_id}/publish-action": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Publish or unpublish a page (V2)",
        "description": "Either publishes or cancels publishing based on the POSTed JSON.",
        "operationId": "PagesPublish",
        "parameters": [
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "action",
                  "title": "",
                  "enum": [
                    "push-buffer-live",
                    "schedule-publish",
                    "cancel-publish"
                  ]
                }
              },
              "required": [
                "action"
              ]
            }
          }
        ]
      }
    },
    "/content/api/v2/templates": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "List templates (V2)",
        "description": "Get all templates.",
        "operationId": "TemplatesList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 20
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create a new template (V2)",
        "description": "Create a new coded template object in Design Manager.",
        "operationId": "TemplatesCreate",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "category_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "category_id",
                  "title": "",
                  "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                  ]
                },
                "folder": {
                  "title": "Folder",
                  "type": "string",
                  "description": "folder"
                },
                "is_available_for_new_content": {
                  "type": "boolean",
                  "description": "is_available_for_new_content",
                  "title": "",
                  "default": false,
                  "enum": [
                    false,
                    true
                  ]
                },
                "template_type": {
                  "type": "integer",
                  "format": "int32",
                  "description": "template_type",
                  "title": "",
                  "enum": [
                    2,
                    4,
                    6,
                    11,
                    12,
                    13,
                    14,
                    19
                  ]
                },
                "path": {
                  "title": "Path",
                  "type": "string",
                  "description": "path"
                },
                "source": {
                  "title": "Source",
                  "type": "string",
                  "description": "source"
                }
              }
            }
          }
        ]
      }
    },
    "/content/api/v2/templates/{template_id}": {
      "delete": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete a template (V2)",
        "description": "Marks the selected Template as deleted. The Template can be restored later via a POST to the restore-deleted endpoint.",
        "operationId": "TemplatesArchive",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update a template (V2)",
        "description": "Updates a template. If not all the fields are included in the body, we will only update the included fields.",
        "operationId": "TemplatesUpdate",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "source": {
                  "title": "Source",
                  "type": "string",
                  "description": "source"
                }
              },
              "required": [
                "source"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
      "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
      "scopes": {
        "forms files hubdb transactional-email settings.users.write conversations.visitor_identification.tokens.create integration-sync tickets e-commerce files.ui_hidden.read crm.objects.marketing_events.read accounting crm.objects.marketing_events.write crm.schemas.custom.read crm.objects.custom.read crm.objects.feedback_submissions.read sales-email-read crm.objects.custom.write forms-uploaded-files settings.users.read crm.import contacts content reports social automation settings.billing.write actions timeline business-intelligence oauth": "forms files hubdb transactional-email settings.users.write conversations.visitor_identification.tokens.create integration-sync tickets e-commerce files.ui_hidden.read crm.objects.marketing_events.read accounting crm.objects.marketing_events.write crm.schemas.custom.read crm.objects.custom.read crm.objects.feedback_submissions.read sales-email-read crm.objects.custom.write forms-uploaded-files settings.users.read crm.import contacts content reports social automation settings.billing.write actions timeline business-intelligence oauth"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "forms files hubdb transactional-email settings.users.write conversations.visitor_identification.tokens.create integration-sync tickets e-commerce files.ui_hidden.read crm.objects.marketing_events.read accounting crm.objects.marketing_events.write crm.schemas.custom.read crm.objects.custom.read crm.objects.feedback_submissions.read sales-email-read crm.objects.custom.write forms-uploaded-files settings.users.read crm.import contacts content reports social automation settings.billing.write actions timeline business-intelligence oauth"
      ]
    }
  ],
  "tags": []
}
